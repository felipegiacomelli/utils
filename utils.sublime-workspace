{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"da",
				"due_date"
			],
			[
				"pdf",
				"pdf_file"
			],
			[
				"gro",
				"groceries_titles"
			],
			[
				"groc",
				"groceries"
			],
			[
				"par",
				"parcelas"
			],
			[
				"Get",
				"GetDirectoy"
			],
			[
				"cas",
				"cash_outs"
			],
			[
				"cash",
				"cash_out"
			],
			[
				"Wh",
				"WhitePotato"
			],
			[
				"White",
				"White"
			],
			[
				"so",
				"solid_bed_force_enable"
			],
			[
				"_Cre",
				"_CreatePlugStatus"
			],
			[
				"_C",
				"_CreatePlugStatus"
			],
			[
				"pl",
				"plug_status"
			],
			[
				"in",
				"index"
			],
			[
				"se",
				"segments"
			],
			[
				"wel",
				"well_test"
			],
			[
				"p_se",
				"p_segment_0"
			],
			[
				"normal",
				"o_normal_force"
			],
			[
				"m_tor",
				"m_torque_drag_plug"
			],
			[
				"crea",
				"create_plug"
			],
			[
				"Crea",
				"CreateTorqueDragPlugStatus"
			],
			[
				"or",
				"originalAmount"
			],
			[
				"get",
				"getValue"
			],
			[
				"mac",
				"macrosCalorieRatio"
			],
			[
				"A",
				"AlmondATalDaCastanha"
			],
			[
				"n",
				"nutrients"
			],
			[
				"nu",
				"nutrients"
			],
			[
				"co",
				"counter"
			],
			[
				"N",
				"Nutrient"
			],
			[
				"nut",
				"nutrient"
			],
			[
				"cop",
				"copy"
			],
			[
				"WHit",
				"WhitePotato"
			],
			[
				"Nutr",
				"nutrient"
			],
			[
				"ro",
				"rounded"
			],
			[
				"target",
				"targetMacros"
			],
			[
				"targe",
				"targets"
			],
			[
				"ne",
				"negotiations"
			],
			[
				"app",
				"appendExtraNegotiations"
			],
			[
				"ti",
				"timestamp"
			],
			[
				"ver",
				"vertices"
			],
			[
				"seg",
				"segments"
			],
			[
				"rho",
				"rho_mud"
			],
			[
				"a",
				"air_weight"
			],
			[
				"P",
				"P_ous"
			],
			[
				"azi",
				"azimuth"
			],
			[
				"az",
				"azimuth"
			],
			[
				"inc",
				"inclination"
			],
			[
				"date",
				"datetime"
			],
			[
				"fel",
				"felipe_counter"
			],
			[
				"expe",
				"expected_problem_samples"
			],
			[
				"as",
				"assert"
			],
			[
				"ex",
				"expected_problem_samples"
			],
			[
				"well",
				"well_operation"
			],
			[
				"pa",
				"palette_tr"
			],
			[
				"tur",
				"turbine_load_loss"
			],
			[
				"sa",
				"sample_b"
			],
			[
				"sam",
				"sample_a"
			],
			[
				"flow",
				"flow_rate"
			],
			[
				"enu",
				"enumerate"
			],
			[
				"len",
				"length"
			],
			[
				"dat",
				"datetime"
			],
			[
				"me",
				"messages"
			],
			[
				"messa",
				"messages"
			],
			[
				"cal",
				"calculate_casing_wear"
			],
			[
				"h",
				"hydrostatic_curve"
			],
			[
				"ba",
				"base_fluid_density"
			],
			[
				"te",
				"temperatures"
			],
			[
				"mea",
				"measured_depth"
			],
			[
				"m",
				"measured_depth"
			],
			[
				"mes",
				"measured_depth"
			],
			[
				"fl",
				"fluid_model"
			],
			[
				"sim",
				"simple_fluid_table"
			],
			[
				"flu",
				"fluid_type"
			],
			[
				"Com",
				"ComputeHydrostaticPressure"
			],
			[
				"irr",
				"irrf_wage"
			],
			[
				"vlg",
				"vgl_annulus_indexes"
			],
			[
				"_Co",
				"_ComputeLeakedPressureLoss"
			],
			[
				"stat",
				"status_a"
			],
			[
				"Annus",
				"Annulus"
			],
			[
				"sha",
				"shallow_test_parameters"
			],
			[
				"Par",
				"ParmesanHard"
			],
			[
				"Ch",
				"DeliChickenBreast"
			],
			[
				"BeefTo",
				"BeefToploin"
			],
			[
				"flui",
				"fluid_table"
			]
		]
	},
	"buffers":
	[
		{
			"file": "colour.py",
			"settings":
			{
				"buffer_size": 757,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"convert_to_pascal",
					null,
					"CgAAAAQAAAAAAAAACQAAAAAAAAAFAAAAd2hpdGU2AAAAAAAAADkAAAAAAAAAAwAAAHJlZIMAAAAAAAAAiAAAAAAAAAAFAAAAZ3JlZW7SAAAAAAAAANkAAAAAAAAABwAAAGJvbGRSZWQjAQAAAAAAACwBAAAAAAAACQAAAGJvbGRHcmVlbnYBAAAAAAAAgAEAAAAAAAAKAAAAYm9sZFllbGxvd8oBAAAAAAAA1AEAAAAAAAAKAAAAYm9sZFB1cnBsZR4CAAAAAAAAJgIAAAAAAAAIAAAAYmxpbmtSZWRmAgAAAAAAAHACAAAAAAAACgAAAGJsaW5rR3JlZW6wAgAAAAAAALsCAAAAAAAACwAAAGJsaW5rWWVsbG93",
					"AQAAAAAAAAAKAAAABAAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/NgAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/gwAAAAAAAACIAAAAAAAAAAAAAAAAAPC/0gAAAAAAAADZAAAAAAAAAAAAAAAAAPC/IwEAAAAAAAAsAQAAAAAAAAAAAAAAAPC/dgEAAAAAAACAAQAAAAAAAAAAAAAAAPC/ygEAAAAAAADUAQAAAAAAAAAAAAAAAPC/HgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/ZgIAAAAAAABwAgAAAAAAAAAAAAAAAPC/sAIAAAAAAAC7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"single_trailing_new_line",
					null,
					"AgAAAPQCAAAAAAAA9AIAAAAAAAABAAAACvQCAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAKAAAABAAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/NgAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/gwAAAAAAAACIAAAAAAAAAAAAAAAAAPC/0gAAAAAAAADZAAAAAAAAAAAAAAAAAPC/IwEAAAAAAAAsAQAAAAAAAAAAAAAAAPC/dgEAAAAAAACAAQAAAAAAAAAAAAAAAPC/ygEAAAAAAADUAQAAAAAAAAAAAAAAAPC/HgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/ZgIAAAAAAABwAgAAAAAAAAAAAAAAAPC/sAIAAAAAAAC7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"expand_tabs",
					null,
					"AQAAAAAAAAAAAAAA9QIAAAAAAAD1AgAAZGVmIFdoaXRlKG1lc3NhZ2UpOgogICAgcmV0dXJuICIlcyIgJSAobWVzc2FnZSkKCgpkZWYgUmVkKG1lc3NhZ2UpOgogICAgcmV0dXJuICIlcyVzJXMiICUgKCJcMDMzWzA7MzFtIiwgbWVzc2FnZSwgIlwwMzNbMG0iKQoKCmRlZiBHcmVlbihtZXNzYWdlKToKICAgIHJldHVybiAiJXMlcyVzIiAlICgiXDAzM1swOzMybSIsIG1lc3NhZ2UsICJcMDMzWzBtIikKCgpkZWYgQm9sZFJlZChtZXNzYWdlKToKICAgIHJldHVybiAiJXMlcyVzIiAlICgiXDAzM1sxOzMxbSIsIG1lc3NhZ2UsICJcMDMzWzBtIikKCgpkZWYgQm9sZEdyZWVuKG1lc3NhZ2UpOgogICAgcmV0dXJuICIlcyVzJXMiICUgKCJcMDMzWzE7MzJtIiwgbWVzc2FnZSwgIlwwMzNbMG0iKQoKCmRlZiBCb2xkWWVsbG93KG1lc3NhZ2UpOgogICAgcmV0dXJuICIlcyVzJXMiICUgKCJcMDMzWzE7MzNtIiwgbWVzc2FnZSwgIlwwMzNbMG0iKQoKCmRlZiBCb2xkUHVycGxlKG1lc3NhZ2UpOgogICAgcmV0dXJuICIlcyVzJXMiICUgKCJcMDMzWzE7MzVtIiwgbWVzc2FnZSwgIlwwMzNbMG0iKQoKCmRlZiBCbGlua1JlZChtZXNzYWdlKToKICAgIHJldHVybiAiXDAzM1s1OzQxbSIgKyBtZXNzYWdlICsgIlwwMzNbMG0iOwoKCmRlZiBCbGlua0dyZWVuKG1lc3NhZ2UpOgogICAgcmV0dXJuICJcMDMzWzU7NDJtIiArIG1lc3NhZ2UgKyAiXDAzM1swbSI7CgoKZGVmIEJsaW5rWWVsbG93KG1lc3NhZ2UpOgogICAgcmV0dXJuICJcMDMzWzU7NDNtIiArIG1lc3NhZ2UgKyAiXDAzM1swbSI7Cg",
					"AQAAAAAAAAAKAAAABAAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/NgAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/gwAAAAAAAACIAAAAAAAAAAAAAAAAAPC/0gAAAAAAAADZAAAAAAAAAAAAAAAAAPC/IwEAAAAAAAAsAQAAAAAAAAAAAAAAAPC/dgEAAAAAAACAAQAAAAAAAAAAAAAAAPC/ygEAAAAAAADUAQAAAAAAAAAAAAAAAPC/HgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/ZgIAAAAAAABwAgAAAAAAAAAAAAAAAPC/sAIAAAAAAAC7AgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "filesystem.py",
			"settings":
			{
				"buffer_size": 303,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"convert_to_pascal",
					null,
					"AwAAAB4AAAAAAAAAKAAAAAAAAAAKAAAAZGVsZXRlRmlsZWsAAAAAAAAAegAAAAAAAAAPAAAAZGVsZXRlRGlyZWN0b3J50AAAAAAAAADdAAAAAAAAAA0AAABtYWtlRGlyZWN0b3J5",
					"AQAAAAAAAAADAAAAHgAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/awAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/0AAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"single_trailing_new_line",
					null,
					"AgAAAC4BAAAAAAAALgEAAAAAAAABAAAACi4BAAAAAAAALwEAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAAHgAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/awAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/0AAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"expand_tabs",
					null,
					"AQAAAAAAAAAAAAAALwEAAAAAAAAvAQAAaW1wb3J0IG9zCmltcG9ydCBzaHV0aWwKCgpkZWYgRGVsZXRlRmlsZShmaWxlKToKICAgIGlmIG9zLnBhdGguZXhpc3RzKGZpbGUpOgogICAgICAgIG9zLnJlbW92ZShmaWxlKQoKCmRlZiBEZWxldGVEaXJlY3RvcnkoZGlyZWN0b3J5KToKICAgIGlmIG9zLnBhdGguZXhpc3RzKGRpcmVjdG9yeSk6CiAgICAgICAgc2h1dGlsLnJtdHJlZShkaXJlY3RvcnkpCgoKZGVmIE1ha2VEaXJlY3RvcnkoZGlyZWN0b3J5KToKICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhkaXJlY3RvcnkpOgogICAgICAgIG9zLm1ha2VkaXJzKGRpcmVjdG9yeSkK",
					"AQAAAAAAAAADAAAAHgAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/awAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/0AAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "json_parser.py",
			"settings":
			{
				"buffer_size": 195,
				"line_ending": "Unix"
			}
		},
		{
			"file": "plot.py",
			"settings":
			{
				"buffer_size": 1554,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pascal",
				"Convert Case: PascalCase"
			],
			[
				"align",
				"AlignTab: Table Mode"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"extract",
				"PackageResourceViewer: Extract Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/home/felipe/Github/Nutrition/source/utils/filesystem.pyc",
		"/home/felipe/Github/CreditCard/definitions.py",
		"/home/felipe/Github/CreditCard/source/reader_c6.py",
		"/home/felipe/Github/CreditCard/source/reader_pan.py",
		"/home/felipe/Github/CreditCard/source/main.py",
		"/home/felipe/Github/CreditCard/nubank/nubank-2021-02.csv",
		"/home/felipe/Github/CreditCard/c6/c6-2021-08.csv",
		"/home/felipe/Dropbox/ESSS/analysis/puc/main.py",
		"/home/felipe/Github/CreditCard/pan/pan-2021-06.csv",
		"/home/felipe/Github/CreditCard/pan/pan-2021-07.csv",
		"/home/felipe/Github/CreditCard/cash/out.txt",
		"/home/felipe/Github/CreditCard/cash/in.txt",
		"/home/felipe/Github/CreditCard/cash_out.py",
		"/home/felipe/Github/CreditCard/cash_in.py",
		"/home/felipe/Github/CreditCard/main.py",
		"/home/felipe/Github/CreditCard/nubank/nubank-2021-10.csv",
		"/home/felipe/Github/CreditCard/nubank/nubank-2021-07.csv",
		"/home/felipe/Github/Training/mesocycles/21-10/2021-10-18.txt",
		"/home/felipe/Github/Training/mesocycles/21-10/2021-10-11.txt",
		"/home/felipe/Github/Training/mesocycles/21-10/2021-10-04.txt",
		"/home/felipe/Github/Training/weeks/2021-10-18.txt",
		"/home/felipe/Github/Training/weeks/2021-10-11.txt",
		"/home/felipe/Github/Training/weeks/2021-10-04.txt",
		"/home/felipe/Github/CreditCard/extra.py",
		"/media/felipe/8d84bcbf-5a2e-41ee-820d-82c7a0bec40a/@home/felipe/Github/Nutrition/logs/2021_05_14.json",
		"/home/felipe/Github/Finance/Extrato.txt",
		"/home/felipe/.bashrc",
		"/home/felipe/Github/Nutrition/weight.txt",
		"/home/felipe/Github/Nutrition/foods/Chicken-broiler-or-fryers-breast-skinless-boneless-meat-only-raw.json",
		"/home/felipe/Github/Nutrition/source/nutrition/daily.py",
		"/home/felipe/Github/Nutrition/make_sphinx.sh",
		"/home/felipe/Github/Nutrition/source/main.py",
		"/home/felipe/Analysis/TD/calc.py",
		"/home/felipe/Analysis/TD/pwda_1/copy.sh",
		"/home/felipe/Github/Nutrition/source/nutrition/food.py",
		"/home/felipe/Github/Nutrition/source/nutrition/meal.py",
		"/home/felipe/Github/Nutrition/source/nutrition/nutrient.py",
		"/home/felipe/Github/Nutrition/source/plot_weight.py",
		"/home/felipe/Github/Nutrition/definitions.py",
		"/home/felipe/Github/Nutrition/source/recipes.py",
		"/home/felipe/Github/Nutrition/source/nutrition/nutritional.py",
		"/home/felipe/Github/Nutrition/source/nutrition/test/test_daily.py",
		"/home/felipe/Github/Nutrition/source/top.py",
		"/home/felipe/Github/Nutrition/source/search.py",
		"/home/felipe/Github/Nutrition/source/nutrition/test/test_food.py",
		"/home/felipe/Github/Nutrition/source/nutrition/test/test_meal.py",
		"/home/felipe/Github/Nutrition/source/nutrition/test/test_nutrient.py",
		"/home/felipe/Github/Nutrition/source/fix.py",
		"/home/felipe/Github/Nutrition/.gitignore",
		"/home/felipe/Github/Nutrition/conf.py",
		"/home/felipe/Github/Nutrition/source/plot_calories.py",
		"/home/felipe/Github/Nutrition/source/misc/cook.py",
		"/home/felipe/Github/Nutrition/source/scraper.py",
		"/home/felipe/Github/Nutrition/rst/conf.py",
		"/home/felipe/Github/Nutrition/source/graphics.py",
		"/home/felipe/Github/Nutrition/source/misc/recover.py",
		"/home/felipe/Github/Nutrition/source/compress.py",
		"/home/felipe/Github/Nutrition/source/misc/average.py",
		"/home/felipe/Github/Nutrition/source/misc/combine.py",
		"/home/felipe/Github/Nutrition/source/portuguese.py",
		"/home/felipe/Github/Nutrition/source/nutrition/Nutritional.py",
		"/home/felipe/Github/Finance/conf.py",
		"/home/felipe/Github/Nutrition/rst/make_sphinx.sh",
		"/home/felipe/Github/Nutrition/source/nutrition/Daily.py",
		"/home/felipe/Github/Nutrition/source/nutrition/Food.py",
		"/home/felipe/Github/Nutrition/source/nutrition/Meal.py",
		"/home/felipe/Github/Nutrition/source/nutrition/Test/test_daily.py",
		"/home/felipe/Github/Nutrition/source/nutrition/Test/test_food.py",
		"/home/felipe/Github/Nutrition/source/nutrition/Test/test_meal.py",
		"/home/felipe/Github/Nutrition/source/nutrition/Test/test_nutrient.py",
		"/home/felipe/Pasta-cooked-enriched-with-added-salt.json",
		"/home/felipe/Github/Nutrition/source/misc/Loss.py",
		"/home/felipe/Downloads/poup.py",
		"/home/felipe/Github/Finance/Bovespa.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_axial_load_semi_theoretical_drag.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/torque_drag_setup_builder.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_torque_drag_setup_builder.py",
		"/home/felipe/Github/Nutrition/PlotWeight.py",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragSetupBuilder.hpp",
		"/home/felipe/Projects/etk/welllib10/source/bindings/_welllib10sim/TorqueDragSetupBuilderPython.cpp",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/algorithms/_tests/test_calculate_inclination_from_tvd.py",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragStiffStringCalculator.cpp",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragBaseCalculator.hpp",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/torque_drag_calculator_interface_impl.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_axial_load_semi_theoretical_drag/testCalculateAxialLoadAndSemiTheoreticalDrag_stiff_string_.csv",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_axial_load_semi_theoretical_drag/testCalculateAxialLoadAndSemiTheoreticalDragStiffStringSolidForce.csv",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/fluid_calibration/_tests/test_fluid_calibration.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/torque_drag_test_case.py",
		"/home/felipe/Projects/etk/welllib10/source/bindings/_welllib10sim/TorqueDragCalculatorPython.cpp",
		"/home/felipe/Projects/etk/welllib10/source/bindings/_welllib10sim/TorqueDragCalibrationPython.cpp",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_stiff_string_calibration.py",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/tests/test_TorqueDragStiffStringCalculator.cpp",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragCalibration.hpp",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragSetupBuilderDataStructures.hpp",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragSoftStringCalculator.hpp",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragSoftStringCalculator.cpp",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_torque_drag_calculator_interface_impl.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_torque_calibration.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_stiff_string_calculator.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_tests/test_soft_string_calculator.py",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/torque_drag_calculator_interface.py",
		"/home/felipe/Dropbox/Scripts/git_commit_message.sh",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/tests/test_TorqueDragCalibration.cpp",
		"/home/felipe/Dropbox/ESSS/sprint/2021_04_29-2021_05_xx.txt",
		"/home/felipe/Github/Finance/Main.py",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragCalibrationForTorque.hpp",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10sim/torque_drag/TorqueDragSetupBuilder.cpp",
		"/home/felipe/Projects/etk/welllib10/source/python/welllib10/torque_drag_calculator/_cpp.py",
		"/home/felipe/Projects/etk/welllib10/source/c++/welllib10/physics/rheology/IRheologicalModel.hpp",
		"/media/felipe/8d84bcbf-5a2e-41ee-820d-82c7a0bec40a/@home/felipe/SINMEC2018/Matplotlib/Cgns/CgnsFile.py",
		"/home/felipe/Github/Finance/Finance/Wallet.py",
		"/home/felipe/Analysis/TD/plot/main.py",
		"/media/felipe/8d84bcbf-5a2e-41ee-820d-82c7a0bec40a/@home/felipe/SINMEC2018/Matplotlib/Workspace/Terzaghi.py",
		"/home/felipe/Github/Finance/Wage.py",
		"/home/felipe/Dropbox/ESSS/TASK/10-PWDA-6867/PWDA-6867.txt",
		"/home/felipe/Dropbox/Finance/CreditCard/main.py",
		"/home/felipe/Dropbox/ESSS/TASK/10-PWDA-6867/draw/main.tex",
		"/media/felipe/8d84bcbf-5a2e-41ee-820d-82c7a0bec40a/@home/felipe/Github/Tcc/configuration/felipe.tex",
		"/media/felipe/8d84bcbf-5a2e-41ee-820d-82c7a0bec40a/@home/felipe/Github/Tcc/tikz/grid/control_volume.tex",
		"/media/felipe/8d84bcbf-5a2e-41ee-820d-82c7a0bec40a/@home/felipe/Github/Tcc/chapter/7_results_intro.tex",
		"/home/felipe/Analysis/TD/main.py",
		"/home/felipe/Dropbox/Finance/CreditCard/csv/nubank-2021-04.csv",
		"/home/felipe/Dropbox/Finance/CreditCard/csv/nubank-2021-03.csv",
		"/home/felipe/Dropbox/Finance/CreditCard/csv/nubank-2021-02.csv",
		"/home/felipe/Dropbox/Finance/CreditCard/csv/nubank-2021-01.csv",
		"/home/felipe/Analysis/TD/felipe.py",
		"/home/felipe/Github/MSHtoCGNS/Zeta/Setup/cgns.sh",
		"/home/felipe/aluguel_clear.txt"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"makeDirectory",
			"def",
			"deleteFile",
			"blinkYellow",
			"b",
			"def"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "colour.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 757,
						"regions":
						{
						},
						"selection":
						[
							[
								4,
								9
							],
							[
								54,
								57
							],
							[
								131,
								136
							],
							[
								210,
								217
							],
							[
								291,
								300
							],
							[
								374,
								384
							],
							[
								458,
								468
							],
							[
								542,
								550
							],
							[
								614,
								624
							],
							[
								688,
								699
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "python"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										17,
										18
									],
									"10":
									[
										707,
										708
									],
									"2":
									[
										65,
										66
									],
									"3":
									[
										144,
										145
									],
									"4":
									[
										225,
										226
									],
									"5":
									[
										308,
										309
									],
									"6":
									[
										392,
										393
									],
									"7":
									[
										476,
										477
									],
									"8":
									[
										558,
										559
									],
									"9":
									[
										632,
										633
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"10":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"2":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"3":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"4":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"5":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"6":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"7":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"8":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"9":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										9,
										10
									],
									"10":
									[
										699,
										700
									],
									"2":
									[
										57,
										58
									],
									"3":
									[
										136,
										137
									],
									"4":
									[
										217,
										218
									],
									"5":
									[
										300,
										301
									],
									"6":
									[
										384,
										385
									],
									"7":
									[
										468,
										469
									],
									"8":
									[
										550,
										551
									],
									"9":
									[
										624,
										625
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "filesystem.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 303,
						"regions":
						{
						},
						"selection":
						[
							[
								30,
								40
							],
							[
								107,
								122
							],
							[
								208,
								221
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "python"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										45,
										46
									],
									"2":
									[
										132,
										133
									],
									"3":
									[
										231,
										232
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"2":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"3":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										40,
										41
									],
									"2":
									[
										122,
										123
									],
									"3":
									[
										221,
										222
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "json_parser.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 195,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "python"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "plot.py",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1554,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "python"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 66.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "utils.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Chick",
				"foods/Chicken-broiler-or-fryers-breast-skinless-boneless-meat-only-raw.json"
			],
			[
				"nutrient",
				"source/nutrition/nutrient.py"
			],
			[
				"test_axial_load_semi_theoretical_drag.py",
				"source/python/welllib10/torque_drag_calculator/_tests/test_axial_load_semi_theoretical_drag.py"
			],
			[
				"torque_drag_",
				"source/python/welllib10/torque_drag_calculator/torque_drag_setup_builder.py"
			],
			[
				"TorqueDragCalibrationForTorque.hpp",
				"source/c++/welllib10sim/torque_drag/TorqueDragCalibrationForTorque.hpp"
			],
			[
				"TorqueDragCalibration.hpp",
				"source/c++/welllib10sim/torque_drag/TorqueDragCalibration.hpp"
			],
			[
				"TorqueDragBaseCalculator.hpp",
				"source/c++/welllib10sim/torque_drag/TorqueDragBaseCalculator.hpp"
			],
			[
				"TorqueDragSoftStringCalculator.cpp",
				"source/c++/welllib10sim/torque_drag/TorqueDragSoftStringCalculator.cpp"
			],
			[
				"TorqueDragSetupBuilder.hpp",
				"source/c++/welllib10sim/torque_drag/TorqueDragSetupBuilder.hpp"
			],
			[
				"test_torque_drag_setup_builder.py",
				"source/python/welllib10/torque_drag_calculator/_tests/test_torque_drag_setup_builder.py"
			],
			[
				"test_stiff_string_calibration.py",
				"source/python/welllib10/torque_drag_calculator/_tests/test_stiff_string_calibration.py"
			],
			[
				"torque_drag_setup_builder.py",
				"source/python/welllib10/torque_drag_calculator/torque_drag_setup_builder.py"
			],
			[
				"test_stiff_string_calculator.py",
				"source/python/welllib10/torque_drag_calculator/_tests/test_stiff_string_calculator.py"
			],
			[
				"test_soft_string_calculator.py",
				"source/python/welllib10/torque_drag_calculator/_tests/test_soft_string_calculator.py"
			],
			[
				"torque_drag_calculator_interface.py",
				"source/python/welllib10/torque_drag_calculator/torque_drag_calculator_interface.py"
			],
			[
				"test_torque_calibration.py",
				"source/python/welllib10/torque_drag_calculator/_tests/test_torque_calibration.py"
			],
			[
				"_cpp",
				"source/python/welllib10/torque_drag_calculator/_cpp.py"
			],
			[
				"test_TorqueDragCalibration.c",
				"source/c++/welllib10sim/torque_drag/tests/test_TorqueDragCalibration.cpp"
			],
			[
				"test_TorqueDragStiffStringCaclulator.",
				"source/c++/welllib10sim/torque_drag/tests/test_TorqueDragStiffStringCalculator.cpp"
			],
			[
				"TorqueDragSoft",
				"source/c++/welllib10sim/torque_drag/TorqueDragSoftStringCalculator.cpp"
			],
			[
				"TorqueDragSetupBuilderPython.cpp",
				"source/bindings/_welllib10sim/TorqueDragSetupBuilderPython.cpp"
			],
			[
				"torque_dra",
				"source/python/welllib10/torque_drag_calculator/torque_drag_setup_builder.py"
			],
			[
				"_cp",
				"source/python/welllib10/torque_drag_calculator/_cpp.py"
			],
			[
				"TorqueDragSetupBuilder.cpp",
				"source/c++/welllib10sim/torque_drag/TorqueDragSetupBuilder.cpp"
			],
			[
				"Fi",
				"Fix.py"
			],
			[
				"surge",
				"pwda/pwda11calc/source/python/pwda11calc/well_drilling_simulator/drivers/surge_swab_driver.py"
			],
			[
				"operation",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/filtering/operation_modes.py"
			],
			[
				"abstract_process_unit.py",
				"all4well/core/source/python/core/processing_units/abstract_process_unit.py"
			],
			[
				"util.py",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/util.py"
			],
			[
				"hdf_cleanup.py",
				"pwda/pwda11/tools/hdf_cleanup.py"
			],
			[
				"operation_modes",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/filtering/operation_modes.py"
			],
			[
				"hydraulic.",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/calculation/hydraulic.py"
			],
			[
				"statu",
				"pwda/pwda11/source/python/pwda11/plugins/status/status_plugin.py"
			],
			[
				"CreateWe",
				"welllib10/source/c++/welllib10/CreateWellFunction.hpp"
			],
			[
				"surge_swab",
				"pwda/pwda11calc/source/python/pwda11calc/well_drilling_simulator/drivers/surge_swab_driver.py"
			],
			[
				"plot_properties.py",
				"pwda/pwda11/source/python/pwda11/plot/plot_properties.py"
			],
			[
				"stat",
				"pwda/pwda11/source/python/pwda11/plugins/status/status_plugin.py"
			],
			[
				"status",
				"pwda/pwda11/source/python/pwda11/plugins/status/status_plugin.py"
			],
			[
				"hyd",
				"pwda/pwda11calc/source/python/pwda11calc/well_drilling_simulator/drivers/hydraulic_driver.py"
			],
			[
				"status_",
				"pwda/pwda11/source/python/pwda11/plugins/status/status_plugin.py"
			],
			[
				"test_casing_",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/_tests/test_casing_wear_pu.py"
			],
			[
				"test_shallow_test_cal",
				"pwda/pwda11calc/source/python/pwda11calc/well_drilling_simulator/drivers/shallow_test/_tests/test_shallow_test_calculation.py"
			],
			[
				"test_shallow_test",
				"pwda/pwda11/source/python/pwda11/plugins/report/report_contents/tasks/_tests/test_shallow_test.py"
			],
			[
				"status_plugin.py",
				"pwda/pwda11/source/python/pwda11/plugins/status/status_plugin.py"
			],
			[
				"pt-",
				"pwda/pwda11/source/python/pt-BR.ts"
			],
			[
				"pt-BR.",
				"pwda/pwda11/source/python/pt-BR.ts"
			],
			[
				"_sim",
				"pwda/pwda11/source/python/pwda11/curve_definition/_simulators.py"
			],
			[
				"test_casing_wear_py",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/_tests/test_casing_wear_pu.py"
			],
			[
				"torque_drag_cur",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/calculation/torque_drag_curves.py"
			],
			[
				"casing_wear.py",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/calculation/casing_wear.py"
			],
			[
				" surge_swab_driver.py",
				"pwda/pwda11calc/source/python/pwda11calc/well_drilling_simulator/drivers/surge_swab_driver.py"
			],
			[
				"torque_drag_cu",
				"pwda/pwda11/source/python/pwda11/engine/processing_units/calculation/torque_drag_curves.py"
			],
			[
				"annu",
				"welllib/source/python/welllib/sim/annulus_pressure_buildup.py"
			],
			[
				"_simu",
				"pwda/pwda11/source/python/pwda11/curve_definition/_simulators.py"
			],
			[
				"torque_drag_dr",
				"pwda/pwda11calc/source/python/pwda11calc/well_drilling_simulator/drivers/torque_drag_driver.py"
			],
			[
				"torque_drag",
				"welllib10/source/python/welllib10/torque_drag_calculator/torque_drag_calculator_interface.py"
			],
			[
				"test_pressure_calculation_pu.py",
				"all4well/pwca_service/source/python/pwca_service/engine/processing_units/calculation/_tests/test_pressure_calculation_pu.py"
			],
			[
				"pressure_calculation_pu.py",
				"all4well/pwca_service/source/python/pwca_service/engine/processing_units/calculation/pressure_calculation_pu.py"
			],
			[
				"caliper",
				"pwda/pwda11/source/python/pwda11/editors/caliper_inference/caliper_controller.py"
			],
			[
				"fluid_cal",
				"welllib10/source/python/welllib10/fluid_calibration/fluid_calibrator.py"
			],
			[
				"shallow_test_calculation.py",
				"pwda/pwda11calc/source/python/pwda11calc/well_drilling_simulator/drivers/shallow_test/shallow_test_calculation.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 367.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
